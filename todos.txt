TODOs Prio 1

    - controls/main.dart: automatisch freeze bei Livestream
    - controls/main.dart: reload bei allen Seiten außer Livestream (index reloaden obwohl er gleich ist wie vorher)
    - controls/main.dart: unfreeze bei page wechsel entfernen (also freeze soll bleiben)
    - page_advertising.dart: last modified, patch wurdeBereitsAngezeigt
(d) - page_diagram.dart: wenn popUp angezeigt wurde patch mit timestamp
(d) - page_diagram.dart: jedes popUp nach 10 Sekunden schließen
(d) - page_diagram.dart: 20 sekunden warten zwischen popUps
(d) - page_diagram.dart: popUp daten mit timestamp nicht anzeigen (in SOQL lösen)
    - alle Strings die aus dem Backend kommen: maximale Zeichenanzahl
(d) - wenn keine BildURL dann Platzhalter (statisch) nehmen: 
(d)     - page_diagram PopUp Gruppenplatzhalter
(d)     - page_top3 Gruppenplatzhalter
(d)     - page_quote: EinzelpersonPlatzhalter
(d)     - page_prize: Gruppenplatzhalter
    - mockdataBackend ablösen:
(d)     - getChartSettings löschen
(d)     - getPopUp
(d)     - prizePage: 3 images statisch, immer gleiche statische headline, immer gleiche statische subline, groupName fällt weg, groupLogo: SELECT Logo__c FROM Team__c WHERE Rang__c = 1 
(d)     - MockDataPage3.getImage löschen weil statisch
(d)     - MockDataPage4.getData, zuletzt bearbeitete ohne schon benutzt, wenn alle schon benutzt dann wieder von vorne
        - MockDataPage5.getData
    - main.dart: ab 5 Minuten vor Gewinn Index auf page_prize, dann freeze, 1 Minute nach Gewinn wieder freeze lösen, manuell über App überschreibbar
    - page_prize.dart: popUp mit Gewinnerbild und Glückwunsch
    - page_quote.dart: patch wenn Person schon gezeigt wurde


    - max Zeichenanzahl integrieren 
    - Prize Bilder generieren: Infos ins Bild: uhrzeit vom Gewinn, was es zu gewinnen gibt
    - Prize Text und überschrift erstellen: der Text sind die Regeln (wie viele Punkte pro Getränk, wie kauf ich für meine Gruppe)
(d) - Platzhalter erstellen: Einzelperson(SocialMedia Comment), Gruppe
    - Image required: 
        - timetable: nicht über URL sondern statisch
        - werbung: imageUrl
        - prize (3 statische Bilder)
    - SOQLs:
(d)     - catchUp
(d)     - advertising
        

    - page_quote.dart: SOQL reihenfolge immer das zuletzt bearbeitete
    - page_advertising.dart: SOQL reihenfolge immer das zuletzt bearbeitete

TODOs Prio 2

    - page_advertising.dart: im Stil einer alten Zeitung, "Newspaper" abgeschnitten oben angezeigt, Headline rechts, Text rechts
    - page_advertising.dart: reload braucht es nicht (_startAutoReloadImage)
    - page_diagram.dart: line 664, assets/placeholder_group.png image so groß wie möglich (höhe ausfüllen)
    - page_livestream.dart: herz größer, unten links "Kiss" unten rechts "Cam"
    - page_livestream.dart: Bier bisschen nach rechts versetzen und links daneben den Text: Ex-Cam Howdie Cowboy du wurdest zum Abschuss freigegeben
    - page_prize.dart: überschrift größer
    - page_prize.dart: Zettel als Hintergrund für rechte Seite
    - page_prize.dart: wenn timer < 60 Minuten dann stunden nicht anzeigen
    - page_prize.dart: line 183 Name leader entfernen, nur Logo anzeigen mit "aktuell führend" als Column
    - page_quote.dart: line: 97 zusätzlich noch Name (doppelt so groß wie username) wie bei twitter
    - page_top3.dart: Wanted poster, Staatsfeind Nr. 1/2/3, Gesucht für 166 Punkte, 20 Bargetränke, 10 Bier usw.

TODOs Prio 3

    - page_diagram.dart: Grafik/Emoji für jedes Legenden Item, Farbkästchen größer machen, Symbol für Getränk in das Kästchen rein
    - page_top3.dart: Grafik/Emoji für jedes Legenden Item, Farbkästchen größer machen, Symbol für Getränk in das Kästchen rein
    - page_diagram.dart:  Einschusslöcher um den Namen (3 Stück) als GIF das nicht looped
    - page_livestream.dart: bei Herz Hintergrund Rosen ans Brett


TODOs am Ende

    - alle durations checken
    - backend durations checken: CatchUp__c.isLessThanOneMinute__c 
    - backend_connection.dart: line 167: anpassung SOQL page_diagram pop up: IsLessThanOneMinute__c = true noch mit einbauen
    - alle imageUrls checken ob die Bilder gut aussehen
    - Code für TODOs checken